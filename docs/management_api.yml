openapi: 3.0.3

info:
  title: Device Configure Management API
  description: |
    API for managing persistent device connections.
    Intended for use by the web GUI

  version: "1"

  contact:
    name: Mender Support
    email: support@mender.io
    url: https://mender.io/contact-us

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://hosted.mender.io/api/management/v1/deviceconfig

# Global security definitions
security:
  - ManagementJWT: []

tags:
  - name: ManagementAPI

paths:
  /configuration:
    get:
      operationId: List Parameters
      tags:
        - ManagementAPI
      summary: Get existing parameters
      # parameters: {}
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      operationId: Set Configuration
      tags:
        - ManagementAPI
      summary: Assign configuration parameters
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Parameter'
                - type: array
                  items:
                    $ref: '#/components/schemas/Parameter'
      responses:
        200:
          description: Parameters set and updated successfully.
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      operationId: Unset Configuration
      tags:
        - ManagementAPI
      summary: Assign configuration parameters
      parameters:
        - name: 'key'
          in: 'query'
          schema:
            description: Name of the parameter(s) to delete.
            type: "array"
            items:
              type: string
      responses:
        200:
          description: Parameters set and updated successfully.
        400:
          description: Invalid Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



components:
  securitySchemes:
    ManagementJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token issued by 'POST /api/management/v1/useradm/auth/login'

        The JWT can be alternatively passed as a cookie named "JWT".

  schemas:
    Parameter:
      type: object
      properties:
        key:
          type: string
          description: Configuration key name.
        value:
          anyOf:
            - type: string
            # - type: number
            # - type: boolean
            # - type: array

    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description:
            Request ID passed with the request X-Men-Requestid header
            or generated by the server.
      description: Error descriptor.
      example:
        error: "<error description>"
        request_id: "eed14d55-d996-42cd-8248-e806663810a8"


  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal error"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    InvalidRequestError:
      description: Invalid Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad request parameters"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    ForbiddenError:
      description: |
          The user is not permitted to access the remote terminal
          for a given device.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Access denied (RBAC)"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"
